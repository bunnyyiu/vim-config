{
    // Settings
    "passfail": false, // Stop on first error.
    "maxerr": 100, // Maximum error before stopping.

    // Predefined globals whom JSHint will ignore.
    "browser": false, // Standard browser globals e.g. `window`, `document`.

    "node": true,
    "rhino": false,
    "couch": false,
    "wsh": true, // Windows Scripting Host.

    "jquery": false,
    "prototypejs": false,
    "mootools": false,
    "dojo": false,

    "predef": [ // Custom globals.
    ],

    // Development.
    "debug": false, // Allow debugger statements e.g. browser breakpoints.
    "devel": true, // Allow developments statements e.g. `console.log();`.

    // ECMAScript 5.
    "strict": true, // Require `use strict` pragma in every file.
    "globalstrict": true, // Allow global "use strict" (also enables 'strict').

    // The Good Parts.
    "asi": false, // Tolerate Automatic Semicolon Insertion (no semicolons).
    "laxbreak": true, // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
    "bitwise": false, // Prohibit bitwise operators (&, |, ^, etc.).
    "boss": false, // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
    "curly": true, // Require {} for every new block or scope.
    "eqeqeq": true, // Require triple equals i.e. `===`.
    "eqnull": false, // Tolerate use of `== null`.
    "evil": false, // Tolerate use of `eval`.
    "expr": false, // Tolerate `ExpressionStatement` as Programs.
    "forin": false, // Tolerate `for in` loops without `hasOwnPrototype`.
    "funcscope": false, // Tolerate variable used outside defining function.
    "immed": true, // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "latedef": true, // Prohipit variable use before definition.
    "lastsemic": true, // Prohibit dropping last semicolon in block
    "loopfunc": false, // Allow functions to be defined within loops.
    "noarg": true, // Prohibit use of `arguments.caller` and `arguments.callee`.
    "regexp": false, // Prohibit `.` and `[^...]` in regular expressions.
    "regexdash": false, // Tolerate unescaped last dash i.e. `[-...]`.
    "scripturl": true, // Tolerate script-targeted URLs.
    "shadow": false, // Allows re-define variables later in code e.g. `var x=1; x=2;`.
    "supernew": false, // Tolerate `new function () { ... };` and `new Object;`.
    "undef": true, // Require all non-global variables be declared before they are used.
    "validthis": false, // Tolerate use of "this" from plain functions.

    // Personal styling preferences.
    "newcap": true, // Require capitalization of all constructor functions e.g. `new F()`.
    "noempty": true, // Prohibit use of empty blocks.
    "nonew": true, // Prohibit use of constructors for side-effects.
    "nomen": false, // Prohibit use of initial or trailing underbars in names.
    "onevar": false, // Allow only one `var` statement per function.
    "plusplus": false, // Prohibit use of `++` & `--`.
    "sub": false, // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "trailing": true, // Prohibit trailing whitespaces.
    "white": true, // Check against strict whitespace and indentation rules.
    "indent": 2, // Specify indentation spacing
    "maxlen": 80, // Specify maximum line length
    "smarttabs": false, // Use spaces only, to avoid different behavior/setting in editors.
    "quotmark": "single", // This option enforces the consistency of quotation marks used throughout your code. It accepts three values: true if you don't want to enforce one particular style but want some consistency, "single" if you want to allow only single quotes and "double" if you want to allow only double quotes.
    "unused": "vars", // This option warns when you define and never use your variables. It checks only variables but not function parameters.
    "maxdepth": 4, // This option lets you control how nested do you want your blocks to be.
    "maxstatements": 50, // This option lets you set the max number of statements allowed per function.
    "maxparams": 5 // This option lets you set the max number of formal parameters allowed per function.
}
